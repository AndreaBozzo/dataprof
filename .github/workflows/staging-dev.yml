name: Staging Development Workflow

on:
  push:
    branches: [staging]
  pull_request:
    branches: [staging]
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

permissions:
  contents: read

jobs:
  # Quick feedback for developers
  quick-validation:
    name: Quick Development Validation
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Rust
        uses: ./.github/actions/setup-rust
        with:
          cache-prefix: staging

      - name: Setup system dependencies
        uses: ./.github/actions/setup-system-deps

      - name: Quick build check
        run: |
          echo "🔨 Quick build verification..."
          timeout 300 cargo check --all-targets
          echo "✅ Build check passed"

      - name: Run core tests
        uses: ./.github/actions/run-tests
        with:
          test-type: core
          timeout: 10

      - name: Format and lint checks
        run: |
          echo "🎨 Checking formatting..."
          cargo fmt --all -- --check

          echo "📎 Running essential clippy checks..."
          cargo clippy --lib -- -D warnings

          echo "✅ Quality checks passed"

  # Development integration tests
  integration-tests:
    name: Integration Testing
    runs-on: ubuntu-latest
    needs: quick-validation
    timeout-minutes: 25
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Rust
        uses: ./.github/actions/setup-rust
        with:
          cache-prefix: staging

      - name: Setup system dependencies
        uses: ./.github/actions/setup-system-deps

      - name: Run integration tests
        uses: ./.github/actions/run-tests
        with:
          test-type: integration
          timeout: 20

      - name: Build benchmark binaries
        run: |
          echo "🔧 Building benchmark binaries for validation..."
          timeout 600 cargo bench --no-run
          echo "✅ Benchmark build successful"

  # Development summary
  staging-summary:
    name: Staging Summary
    runs-on: ubuntu-latest
    needs: [quick-validation, integration-tests]
    if: always()
    steps:
      - name: Development summary
        run: |
          echo "📊 Staging Development Summary"
          echo "================================"
          echo "Quick validation: ${{ needs.quick-validation.result }}"
          echo "Integration tests: ${{ needs.integration-tests.result }}"

          if [[ "${{ needs.quick-validation.result }}" == "success" ]]; then
            echo "✅ Core functionality validated"
          else
            echo "❌ Core validation failed - check basic functionality"
          fi

          if [[ "${{ needs.integration-tests.result }}" == "success" ]]; then
            echo "✅ Integration tests passed"
          elif [[ "${{ needs.integration-tests.result }}" == "skipped" ]]; then
            echo "⏭️ Integration tests skipped (PR workflow)"
          else
            echo "❌ Integration tests failed"
          fi

          echo ""
          echo "🚀 Ready for development iteration"
