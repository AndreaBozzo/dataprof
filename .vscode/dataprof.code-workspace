{
    "folders": [
        {
            "name": "dataprof",
            "path": ".."
        }
    ],
    "settings": {
        // Rust settings
        "rust-analyzer.checkOnSave": true,
        "rust-analyzer.cargo.features": "all",
        "rust-analyzer.procMacro.enable": true,
        "rust-analyzer.inlayHints.parameterHints.enable": true,
        "rust-analyzer.inlayHints.typeHints.enable": true,

        // Editor settings
        "editor.formatOnSave": true,
        "editor.codeActionsOnSave": {
            "source.fixAll.rust-analyzer": "explicit"
        },
        "editor.rulers": [100],
        "editor.tabSize": 4,
        "editor.insertSpaces": true,

        // File associations
        "files.associations": {
            "*.toml": "toml",
            "Dockerfile*": "dockerfile"
        },

        // Exclude patterns
        "files.watcherExclude": {
            "**/target/**": true,
            "**/.git/**": true,
            "**/node_modules/**": true,
            "**/.mypy_cache/**": true,
            "**/.venv/**": true
        },
        "files.exclude": {
            "**/target": true
        },
        "search.exclude": {
            "**/Cargo.lock": true,
            "**/*.csv": true
        },

        // Terminal settings
        "terminal.integrated.defaultProfile.windows": "Git Bash",

        // Python settings (for scripts)
        "python.defaultInterpreterPath": ".venv/bin/python",
        "[python]": {
            "editor.formatOnSave": true,
            "editor.defaultFormatter": "ms-python.black-formatter"
        },

        // TOML formatting
        "[toml]": {
            "editor.defaultFormatter": "tamasfe.even-better-toml"
        },

        // Git settings
        "git.autofetch": true,
        "git.confirmSync": false
    },
    "extensions": {
        "recommendations": [
            // Rust development
            "rust-lang.rust-analyzer",
            "vadimcn.vscode-lldb",
            "fill-labs.dependi",
            "tamasfe.even-better-toml",

            // Python (for scripts)
            "ms-python.python",
            "ms-python.black-formatter",

            // Git
            "eamodio.gitlens",

            // Documentation
            "yzhang.markdown-all-in-one",
            "streetsidesoftware.code-spell-checker"
        ]
    },
    "tasks": {
        "version": "2.0.0",
        "tasks": [
            {
                "label": "cargo check",
                "type": "cargo",
                "command": "check",
                "problemMatcher": ["$rustc"],
                "group": "build"
            },
            {
                "label": "cargo test",
                "type": "cargo",
                "command": "test",
                "problemMatcher": ["$rustc"],
                "group": "test"
            },
            {
                "label": "cargo build (release)",
                "type": "cargo",
                "command": "build",
                "args": ["--release"],
                "problemMatcher": ["$rustc"],
                "group": "build"
            },
            {
                "label": "cargo clippy",
                "type": "shell",
                "command": "cargo",
                "args": ["clippy", "--", "-D", "warnings"],
                "problemMatcher": ["$rustc"],
                "group": "test"
            }
        ]
    },
    "launch": {
        "version": "0.2.0",
        "configurations": [
            {
                "type": "lldb",
                "request": "launch",
                "name": "Debug unit tests",
                "cargo": {
                    "args": ["test", "--no-run", "--lib", "--package=dataprof"],
                    "filter": {
                        "name": "dataprof",
                        "kind": "lib"
                    }
                },
                "args": [],
                "cwd": "${workspaceFolder}",
                "env": {
                    "RUST_LOG": "debug",
                    "RUST_BACKTRACE": "1"
                }
            },
            {
                "type": "lldb",
                "request": "launch",
                "name": "Debug CLI",
                "cargo": {
                    "args": ["build", "--bin=dataprof-cli", "--package=dataprof"],
                    "filter": {
                        "name": "dataprof-cli",
                        "kind": "bin"
                    }
                },
                "args": [
                    "${input:csvFile}",
                    "${input:cliOptions}"
                ],
                "cwd": "${workspaceFolder}",
                "env": {
                    "RUST_LOG": "debug",
                    "RUST_BACKTRACE": "1"
                }
            },
            {
                "type": "lldb",
                "request": "launch",
                "name": "Debug integration tests",
                "cargo": {
                    "args": ["test", "--no-run", "--test=${input:testName}", "--package=dataprof"],
                    "filter": {
                        "kind": "test"
                    }
                },
                "args": [],
                "cwd": "${workspaceFolder}",
                "env": {
                    "RUST_LOG": "debug",
                    "RUST_BACKTRACE": "1"
                }
            }
        ],
        "inputs": [
            {
                "id": "csvFile",
                "description": "Path to CSV file",
                "default": ".devcontainer/test-data/sample.csv",
                "type": "promptString"
            },
            {
                "id": "cliOptions",
                "description": "CLI options",
                "default": "--quality",
                "type": "promptString"
            },
            {
                "id": "testName",
                "description": "Test name",
                "default": "integration_tests",
                "type": "promptString"
            }
        ]
    }
}
