{
  "name": "DataProfiler Development Container",
  "dockerFile": "Dockerfile",

  // Features to add to the dev container
  "features": {
    "ghcr.io/devcontainers/features/common-utils:2": {
      "installZsh": true,
      "configureZshAsDefaultShell": true,
      "installOhMyZsh": true,
      "upgradePackages": true,
      "username": "vscode",
      "userUid": "automatic",
      "userGid": "automatic"
    },
    "ghcr.io/devcontainers/features/rust:1": {
      "version": "latest",
      "profile": "default"
    },
    "ghcr.io/devcontainers/features/git:1": {
      "ppa": true,
      "version": "latest"
    },
    "ghcr.io/devcontainers/features/docker-outside-of-docker:1": {
      "version": "latest",
      "enableNonRootDocker": "true",
      "moby": "true"
    }
  },

  // Configure tool-specific properties
  "customizations": {
    "vscode": {
      // Set *default* container specific settings.json values on container create
      "settings": {
        "rust-analyzer.checkOnSave.command": "clippy",
        "rust-analyzer.checkOnSave.extraArgs": ["--all-targets", "--all-features"],
        "rust-analyzer.cargo.features": "all",
        "rust-analyzer.procMacro.enable": true,
        "rust-analyzer.cargo.loadOutDirsFromCheck": true,
        "rust-analyzer.completion.addCallArgumentSnippets": true,
        "rust-analyzer.completion.addCallParenthesis": true,
        "editor.formatOnSave": true,
        "editor.codeActionsOnSave": {
          "source.fixAll.rust-analyzer": true
        },
        "files.watcherExclude": {
          "**/target/**": true
        },
        "python.defaultInterpreterPath": "/usr/local/bin/python",
        "python.linting.enabled": true,
        "python.linting.pylintEnabled": false,
        "python.linting.flake8Enabled": true,
        "python.formatting.provider": "black",
        "terminal.integrated.defaultProfile.linux": "zsh"
      },

      // Add the IDs of extensions you want installed when the container is created
      "extensions": [
        "rust-lang.rust-analyzer",
        "vadimcn.vscode-lldb",
        "serayuzgur.crates",
        "tamasfe.even-better-toml",
        "ms-python.python",
        "ms-python.flake8",
        "ms-python.black-formatter",
        "eamodio.gitlens",
        "github.copilot",
        "github.copilot-chat",
        "ms-vscode.vscode-json",
        "yzhang.markdown-all-in-one",
        "shd101wyy.markdown-preview-enhanced",
        "streetsidesoftware.code-spell-checker",
        "ms-vscode.cmake-tools",
        "twxs.cmake",
        "ms-vscode.makefile-tools"
      ]
    }
  },

  // Use 'forwardPorts' to make a list of ports inside the container available locally
  "forwardPorts": [
    5432,  // PostgreSQL
    3306,  // MySQL
    8000,  // Development server
    8080   // Alternative development server
  ],

  // Use 'postCreateCommand' to run commands after the container is created
  "postCreateCommand": "chmod +x scripts/setup-dev.sh && ./scripts/setup-dev.sh",

  // Configure container user
  "remoteUser": "vscode",

  // Mount additional volumes
  "mounts": [
    "source=${localWorkspaceFolder}/.vscode,target=/home/vscode/.vscode,type=bind,consistency=cached",
    "source=dataprof-cargo-cache,target=/usr/local/cargo,type=volume",
    "source=dataprof-target-cache,target=${containerWorkspaceFolder}/target,type=volume"
  ],

  // Set environment variables
  "containerEnv": {
    "RUST_LOG": "debug",
    "RUST_BACKTRACE": "1",
    "CARGO_TARGET_DIR": "/tmp/target"
  },

  // Lifecycle hooks
  "onCreateCommand": {
    "install-dev-tools": "cargo install cargo-tarpaulin cargo-machete just && rustup component add rustfmt clippy",
    "setup-git": "git config --global --add safe.directory ${containerWorkspaceFolder}"
  },

  "updateContentCommand": "cargo build",

  // Development container configuration
  "privileged": false,
  "overrideCommand": false,
  "shutdownAction": "stopContainer"
}